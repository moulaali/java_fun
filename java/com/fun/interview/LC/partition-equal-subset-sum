/**
https://leetcode.com/problems/partition-equal-subset-sum/

Given a non-empty array containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.

Note:

Each of the array element will not exceed 100.
The array size will not exceed 200.
 

Example 1:

Input: [1, 5, 11, 5]

Output: true

Explanation: The array can be partitioned as [1, 5, 5] and [11].
 

Example 2:

Input: [1, 2, 3, 5]

Output: false

Explanation: The array cannot be partitioned into equal sum subsets.
*/

import java.io.*; 

public class Solution 
{ 
  // Returns the minimum value of 
  //the difference of the two sets. 
  static int findMin(int arr[], int n) 
  { 
    // Calculate sum of all elements 
    int sum = 0; 
    for (int i = 0; i < n; i++) 
      sum += arr[i]; 
  
    // Create an array to store 
    // results of subproblems 
    boolean dp[][] = new boolean[n + 1][sum + 1]; 
  
    // Initialize first column as true. 
    // 0 sum is possible with all elements. 
    for (int i = 0; i <= n; i++) 
      dp[i][0] = true; 
  
    // Initialize top row, except dp[0][0], 
    // as false. With 0 elements, no other 
    // sum except 0 is possible 
    for (int i = 1; i <= sum; i++) 
      dp[0][i] = false; 
  
    // Fill the partition table 
    // in bottom up manner 
    for (int i = 1; i <= n; i++) 
    { 
      for (int j = 1; j <= sum; j++) 
      { 
        // If i'th element is excluded 
        dp[i][j] = dp[i - 1][j]; 
  
        // If i'th element is included 
        if (arr[i - 1] <= j) 
          dp[i][j] |= dp[i - 1][j - arr[i - 1]]; 
      } 
    } 
  
    // Initialize difference of two sums. 
    int diff = Integer.MAX_VALUE; 
    
    // Find the largest j such that dp[n][j] 
    // is true where j loops from sum/2 t0 0 
    for (int j = sum / 2; j >= 0; j--) 
    { 
      // Find the 
      if (dp[n][j] == true) 
      { 
        diff = sum - 2 * j;
        System.out.println("Sum " + j + " is possible");
        break; 
      } 
    } 
    return diff; 
  } 
  
  // Driver program 
  public static void main (String[] args) 
  { 
    int arr[] = {3, 1, 4, 2, 2, 1}; 
    int n = arr.length; 
    System.out.println ("The minimum difference between 2 sets is " + findMin(arr, n));
  } 
} 
